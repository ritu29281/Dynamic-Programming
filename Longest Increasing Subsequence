Input: nums = [10,9,2,5,3,7,101,18]
Output: 4
Explanation: The longest increasing subsequence is [2,3,7,101], therefore the length is 4.

CODE:

class Solution {
public:
    int n;
    int dp[2501][2501];
    
    int solve(vector<int>&nums,int i,int prev){
        if(i>=n){
            return 0;
        }
        if(prev!=-1 && dp[i][prev]!=-1){
            return dp[i][prev];
        }
        int take=0;
        if(prev==-1 || nums[prev]<nums[i]){
            take=1+solve(nums,i+1,i);
        }
        int skip=solve(nums,i+1,prev);
        if(prev!=-1){
           dp[i][prev]= max(take,skip);
        }
        return max(take,skip);
    }
    int lengthOfLIS(vector<int>& nums) {
        n=nums.size();
        memset(dp,-1,sizeof(dp));
        return solve(nums,0,-1);
    }
};
