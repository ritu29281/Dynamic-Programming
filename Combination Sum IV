Input: nums = [1,2,3], target = 4
Output: 7
Explanation:
The possible combination ways are:
(1, 1, 1, 1)
(1, 1, 2)
(1, 2, 1)
(1, 3)
(2, 1, 1)
(2, 2)
(3, 1)
Note that different sequences are counted as different combinations.

CODE:

class Solution {
public:
    int n;
    int solve(int idx,vector<int>&nums,int target,vector<vector<int>>&dp){
        if(target==0) return 1;
        if(idx>=n || target<0){
            return 0;
        }
        if(dp[idx][target]!=-1){
            return dp[idx][target];
        }
        int take=solve(0,nums,target-nums[idx],dp);
        int not_take=solve(idx+1,nums,target,dp);
        return dp[idx][target]=take+not_take;
    }
    int combinationSum4(vector<int>& nums, int target) {
       n=nums.size();
       vector<vector<int>>dp(201 , vector<int> (1001, -1));
       return solve(0,nums,target,dp);
    }
};
