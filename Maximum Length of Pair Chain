Input: pairs = [[1,2],[2,3],[3,4]]
Output: 2
Explanation: The longest chain is [1,2] -> [3,4].

class Solution {
public:
     int n;
    int dp[2501][2501];
    
    int solve(vector<vector<int>>&nums,int i,int prev){
        if(i>=n){
            return 0;
        }
        if(prev!=-1 && dp[i][prev]!=-1){
            return dp[i][prev];
        }
        int take=0;
        if(prev==-1 || nums[prev][1]<nums[i][0]){
            take=1+solve(nums,i+1,i);
        }
        int skip=solve(nums,i+1,prev);
        if(prev!=-1){
           dp[i][prev]= max(take,skip);
        }
        return max(take,skip);
    }
    int findLongestChain(vector<vector<int>>& pairs) {
         n=pairs.size();
        memset(dp,-1,sizeof(dp));
        sort(pairs.begin(),pairs.end());
        return solve(pairs,0,-1);
    }
};
