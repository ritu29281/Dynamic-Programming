Input:
N = 3, sum = 4
coins = {1,2,3}
Output: 4
Explanation: Four Possible ways are: {1,1,1,1},{1,1,2},{2,2},{1,3}.
CODE:

long long int Solve(int coins[], int n, int sum,vector<vector<long long int>>&dp){
      if(sum==0)return 1;
      if(sum<0 || n<=0) return 0;
      if(dp[n][sum]!=-1) return dp[n][sum];
      long long int include=0;
      long long int exclude=0;
      if(coins[n-1]<=sum){
          include=Solve(coins,n,sum-coins[n-1],dp);
      }
      exclude=Solve(coins,n-1,sum,dp);
      dp[n][sum]=include+exclude;
      return dp[n][sum];
  }
    long long int count(int coins[], int N, int sum) {

      vector<vector<long long int>>dp(N+1,vector<long long int>((sum+1),-1));
      long long int ans= Solve(coins,N,sum,dp);
      return ans;
    }
